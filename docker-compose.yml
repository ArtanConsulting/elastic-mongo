version: '2'
services:
  mongo3:
    hostname: mongo3
    image: mongo:latest
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rs", "--journal", "--smallfiles", "--rest" ]
    ports:
      - "27018:27017"
      - "28018:28017"
    restart: always
    volumes:
      - ./docker/volumes/mongo/3:/data/db:rw
  mongo2:
    hostname: mongo2
    image: mongo:latest
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rs", "--journal", "--smallfiles", "--rest" ]
    ports:
      - "27019:27017"
      - "28019:28017"
    restart: always
    volumes:
      - ./docker/volumes/mongo/2:/data/db:rw

  mongo1:
    hostname: mongo1
    image: mongo:latest
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rs", "--journal", "--smallfiles", "--rest" ]
    ports:
      - "27017:27017"
      - "28017:28017"
    depends_on:
      - mongo2
      - mongo3
    restart: always
    volumes:
      - ./docker/volumes/mongo/1:/data/db:rw

  elasticsearch:
    hostname: elasticsearch
    image: stabenfeldt/elasticsearch-marvel
    ports:
      - "9200:9200"
      - "9300:9300"
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./elasticsearch/logging.yml:/etc/elasticsearch/logging.yml
    restart: always

  # This configures the MongoDB replicaset
  mongosetup:
    image: mongo:latest
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./scripts:/scripts
    entrypoint: [ "/scripts/setup.sh" ]


  ###################################################################
  # Make sure you include either mongo-connector OR transporter.
  #
  #

  # mongo-connector
  # https://github.com/10gen-labs/mongo-connector
  connector:
   image: python:latest
   depends_on:
     - mongo1
     - mongo2
     - mongo3
     - elasticsearch
   volumes:
     - ./scripts:/scripts
   entrypoint: [ "/scripts/mongo-connector.sh" ]


  # Transporter
  #
  # https://github.com/compose/transporter
  # https://www.compose.io/articles/transporter-driving-part-one/
  # transporter:
  #   image: golang:1.5
  #   depends_on:
  #     - mongo1:mongo1
  #     - mongo2:mongo2
  #     - mongo3:mongo3
  #     - elasticsearch:elasticsearch
  #   volumes:
  #     - ./transporter:/transporter
  #     - ./scripts:/scripts
  #   entrypoint: [ "/transporter/run.sh" ]
  #   restart: always


  # Make sure ES does not rellocate it's shards when it has low disk space.
  disabledisktreshold:
    image: mongo:latest
    depends_on:
      - elasticsearch
    volumes:
      - ./scripts:/scripts
    entrypoint: [ "/scripts/disable-disk-treshold.sh" ]

  # Verify reading and writing
  # Run 'docker logs -f elasticmongo_verify_1' to see what it outputs.
  verify:
    image: mongo:latest
    depends_on:
      - mongo1
      - mongo2
      - mongo3
      - elasticsearch
    volumes:
      - ./scripts:/scripts
    entrypoint: [ "/scripts/query.sh" ]
